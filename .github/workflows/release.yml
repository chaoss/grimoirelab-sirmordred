name: release

on:
  push:
    tags:
      - '*.*.*'
      - '*.*.*-*'

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Build package using Poetry and store result
        uses: chaoss/grimoirelab-github-actions/build@main
        with:
          artifact-name: sirmordred-dist
          artifact-path: dist

  tests:
    needs: [build]
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mariadb:11.8
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: >-
          --health-cmd="healthcheck.sh --connect --innodb_initialized"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      redis:
        image: redis
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    name: Python ${{ matrix.python-version }} for ES ${{ matrix.elasticsearch-version }}
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']
        elasticsearch-version: [6.8.6, 7.2.0]

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Download distribution artifact
        uses: actions/download-artifact@c850b930e6ba138125429b7e5c93fc707a7f8427 # v4.1.4
        with:
          name: sirmordred-dist
          path: dist

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          pipx install poetry

      - name: Configure sysctl limits
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144

      - name: Runs Elasticsearch ${{ matrix.elasticsearch-version }}
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: ${{ matrix.elasticsearch-version }}

      - name: Install dev dependencies
        run: |
          poetry install --only dev --no-root

      - name: Verify MySQL connection
        run: |
          sudo apt-get install -y mysql-client libmysqlclient-dev
          mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports[3306] }} -uroot -proot -e "SHOW GRANTS FOR 'root'@'localhost'"
          mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports[3306] }} -uroot -proot mysql

      - name: Setup MySQL Database
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          mysql --host $DB_HOST --port $DB_PORT -uroot -proot -e "CREATE DATABASE test_sh"

      - name: Run Sortinghat Server
        run: |
          git clone --single-branch https://github.com/chaoss/grimoirelab-sortinghat /tmp/sortinghat
          cp tests/sortinghat_settings.py /tmp/sortinghat/config/settings/sortinghat_settings.py
          cd /tmp/sortinghat
          poetry install -vvv
          poetry run python manage.py migrate --settings=config.settings.sortinghat_settings
          poetry run python manage.py createsuperuser --username root --noinput --email 'root@root.com' --settings=config.settings.sortinghat_settings
          poetry run python manage.py runserver --settings=config.settings.sortinghat_settings &
          poetry run python manage.py rqworker --settings=config.settings.sortinghat_settings &
          cd

      - name: Verify Elasticsearch connection
        run: |
          curl -fsSL "http://localhost:9200/_cat/health?h=status"

      - name: Test package
        run: |
          PACKAGE=`(cd dist && ls *whl)` && echo $PACKAGE
          poetry run pip install --pre ./dist/$PACKAGE
          cd tests && poetry run python run_tests.py

  release:
    needs: [tests]
    runs-on: ubuntu-latest
    steps:
      - name: Create a new release on the repository
        uses: chaoss/grimoirelab-github-actions/release@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  publish:
    needs: [tests]
    runs-on: ubuntu-latest
    steps:
      - name: Publish the package on PyPI
        uses: chaoss/grimoirelab-github-actions/publish@main
        with:
          artifact-name: sirmordred-dist
          artifact-path: dist
          pypi-api-token: ${{ secrets.PYPI_API_TOKEN }}
