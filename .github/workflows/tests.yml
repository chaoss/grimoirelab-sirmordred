name: tests

on:
  push:
    branches:
      - '**'
    tags:
      - '!**'
  pull_request:
    branches:
      - '**'

jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mariadb:11.8
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: >-
          --health-cmd="healthcheck.sh --connect --innodb_initialized"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      redis:
        image: redis
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    name: Python ${{ matrix.python-version }} for ES ${{ matrix.elasticsearch-version }}
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']
        elasticsearch-version: [6.8.6, 7.2.0]
    
    steps:
    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
      with:
        python-version: ${{ matrix.python-version }}
      
    - name: Configure sysctl limits
      run: |
        sudo swapoff -a
        sudo sysctl -w vm.swappiness=1
        sudo sysctl -w fs.file-max=262144
        sudo sysctl -w vm.max_map_count=262144
      
    - name: Runs Elasticsearch ${{ matrix.elasticsearch-version }}
      uses: elastic/elastic-github-actions/elasticsearch@master
      with:
        stack-version: ${{ matrix.elasticsearch-version }}

    - name: Install and set up Poetry
      run: |
        pipx install poetry

    - name: Install dependencies
      run: |
        poetry install -vvv
        poetry run pip install -r requirements_dev.txt

    - name: Verify MySQL connection
      run: |
        sudo apt-get install -y mysql-client libmysqlclient-dev
        mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports[3306] }} -uroot -proot -e "SHOW GRANTS FOR 'root'@'localhost'"
        mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports[3306] }} -uroot -proot mysql
      
    - name: Verify Elasticsearch connection
      run: |
        curl -fsSL "http://localhost:9200/_cat/health?h=status"

    - name: Setup MySQL Database
      env:
        DB_HOST: 127.0.0.1
        DB_PORT: ${{ job.services.mysql.ports[3306] }}
      run: |
        mysql --host $DB_HOST --port $DB_PORT -uroot -proot -e "CREATE DATABASE test_sh"

    - name: Run Sortinghat Server
      run: |
        git clone --single-branch https://github.com/chaoss/grimoirelab-sortinghat /tmp/sortinghat
        cp tests/sortinghat_settings.py /tmp/sortinghat/config/settings/sortinghat_settings.py
        cd /tmp/sortinghat
        poetry install -vvv
        poetry run python manage.py migrate --settings=config.settings.sortinghat_settings
        poetry run python manage.py createsuperuser --username root --noinput --email 'root@root.com' --settings=config.settings.sortinghat_settings
        poetry run python manage.py runserver --settings=config.settings.sortinghat_settings &
        poetry run python manage.py rqworker --settings=config.settings.sortinghat_settings &
        cd

    - name: Lint with flake8
      run: |
        poetry run flake8

    - name: Tests and Coverage
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cd tests
        poetry run coverage run --source=sirmordred run_tests.py
    - name: Coveralls
      uses: coverallsapp/github-action@643bc377ffa44ace6394b2b5d0d3950076de9f63 # v2.3.0
      with:
        coverage-reporter-version: "v0.6.9"
        flag-name: run ${{ join(matrix.*, ' - ') }}
        parallel: true2
